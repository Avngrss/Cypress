{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-29T18:48:08.639Z",
    "end": "2024-10-29T18:48:13.036Z",
    "duration": 4397,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e45ad01f-64cf-4004-a186-2aa7e195c614",
      "title": "",
      "fullFile": "cypress\\e2e\\tdd.cy.js",
      "file": "cypress\\e2e\\tdd.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e59b5726-24a3-4f2a-9c15-395f70fc57c2",
          "title": "Validate complex Data using Assert",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Dewscrobe",
              "fullTitle": "Validate complex Data using Assert Dewscrobe",
              "timedOut": null,
              "duration": 1613,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('www.google.com');\n//Asserting String\nlet firstName = 'TestingFunda';\nassert.equal(firstName, 'TestingFunda');\nassert.include(firstName, 'Testing');\nassert.typeOf(firstName, 'string');\nassert.notTypeOf(firstName, 'Integer');\n//Asserting Object\nlet person = {\n  firstName: 'Testing',\n  lastName: 'Funda'\n};\nassert.property(person, 'lastName');\nassert.isObject(person);\nassert.deepPropertyVal(person, 'lastName', 'Funda');\n//Asserting Array\nlet employeeID = [1, 2, 3, 4, 5];\nassert.isArray(employeeID);\nassert.includeDeepMembers(employeeID, [2, 3]);",
              "err": {},
              "uuid": "ba3df3be-2a82-418e-a315-aa716be1c122",
              "parentUUID": "e59b5726-24a3-4f2a-9c15-395f70fc57c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba3df3be-2a82-418e-a315-aa716be1c122"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1613,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}